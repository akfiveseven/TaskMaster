
  /*

    <nav className="navbar bg-body-tertiary fixed-top">
  <div className="container-fluid">
     <a className="navbar-brand" href="#">Offcanvas navbar</a> 
    <button className="navbar-toggler me-auto" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasNavbar" aria-controls="offcanvasNavbar" aria-label="Toggle navigation">
      <span className="navbar-toggler-icon"></span>
    </button>
    <div className="offcanvas offcanvas-start" tabindex="-1" id="offcanvasNavbar" aria-labelledby="offcanvasNavbarLabel">
      <div className="offcanvas-header">
        <h5 className="offcanvas-title" id="offcanvasNavbarLabel">Offcanvas</h5>
        <button type="button" className="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
      </div>
      <div className="offcanvas-body">
        <ul className="navbar-nav justify-content-end flex-grow-1 pe-3">
          <li className="nav-item">
            <a className="nav-link active" aria-current="page" href="#">Home</a>
          </li>
          <li className="nav-item">
            <a className="nav-link" href="#">Link</a>
          </li>
          <li className="nav-item dropdown">
            <a className="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
              Dropdown
            </a>
            <ul className="dropdown-menu">
              <li><a className="dropdown-item" href="#">Action</a></li>
              <li><a className="dropdown-item" href="#">Another action</a></li>
              <li>
                <hr className="dropdown-divider"></hr>
              </li>
              <li><a className="dropdown-item" href="#">Something else here</a></li>
            </ul>
          </li>
        </ul>
        <form className="d-flex mt-3" role="search">
          <input className="form-control me-2" type="search" placeholder="Search" aria-label="Search"></input>
          <button className="btn btn-outline-success" type="submit">Search</button>
        </form>
      </div>
    </div>
  </div>
</nav>
  */

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

  /*
const CreateField = ({ open, handleClose, handleChange, handleDescription, handleRadioButton, handleStartDate, handleEndDate, handleCategory, handleClick, taskName, taskDesc, taskPriority, taskStartDate, taskEndDate, taskCategory, taskID }) => {
  return (
    <Dialog open={open} onClose={handleClose}>
      <DialogTitle id="form-dialog-title">Create a Task</DialogTitle>
      <DialogContent>
          <TextField
            fullWidth
            margin="normal"
            label="Task" 
            variant="outlined"
            value={taskName}
            onChange={handleChange}
          />
      
          <TextField 
            fullWidth
            margin="normal"
            label="Description" 
            variant="outlined" 
            multiline 
            rows={4} 
            value={taskDesc}
            onChange={handleDescription}
            placeholder="Give your task some detail"
          />
      
          <FormControl component="fieldset" margin="normal">
            <FormLabel component="legend">Priority</FormLabel>
            <RadioGroup row name="priority" value={taskPriority} onChange={handleRadioButton}>
              <FormControlLabel value="Low" control={<Radio />} label="Low" />
              <FormControlLabel value="Medium" control={<Radio />} label="Medium" />
              <FormControlLabel value="High" control={<Radio />} label="High" />
            </RadioGroup>
          </FormControl>
      
          <TextField 
            fullWidth
            margin="normal"
            label="Start Date" 
            type="date" 
            variant="outlined" 
            InputLabelProps={{ shrink: true }} 
            value={taskStartDate}
            onChange={handleStartDate} 
          />
      
          <TextField 
            fullWidth
            margin="normal"
            label="End Date" 
            type="date" 
            variant="outlined" 
            InputLabelProps={{ shrink: true }} 
            value={taskEndDate}
            onChange={handleEndDate} 
          />
      
          <TextField 
            fullWidth
            margin="normal"
            label="Category" 
            variant="outlined" 
            value={taskCategory}
            onChange={handleCategory} 
          />
      
          <Button 
            fullWidth
            variant="contained" 
            color="primary" 
            style={{ marginTop: '1em' }} 
            onClick={handleClick}
          >
            Add Task
          </Button>
        </DialogContent>
      </Dialog>
    );
  };
*/

/*
  const EditField = ({ openEdit, handleCloseEdit, handleChange, handleDescription, handleRadioButton, handleStartDate, handleEndDate, handleCategory, handleEditSubmit, taskName, taskDesc, taskPriority, taskStartDate, taskEndDate, taskCategory, taskID }) => {
    return (
      <Dialog open={openEdit} onClose={handleCloseEdit}>
        <DialogTitle id="form-dialog-title">Edit your Task</DialogTitle>
        <DialogContent>
            <TextField
              fullWidth
              margin="normal"
              label="Task" 
              variant="outlined"
              value={taskName}
              onChange={handleChange}
            />
        
            <TextField 
              fullWidth
              margin="normal"
              label="Description" 
              variant="outlined" 
              multiline 
              rows={4}
              value={taskDesc}
              onChange={handleDescription}
              placeholder="Give your task some detail"
            />
        
            <FormControl component="fieldset" margin="normal">
              <FormLabel component="legend">Priority</FormLabel>
              <RadioGroup row name="priority" value={taskPriority} onChange={handleRadioButton}>
                <FormControlLabel value="Low" control={<Radio />} label="Low" />
                <FormControlLabel value="Medium" control={<Radio />} label="Medium" />
                <FormControlLabel value="High" control={<Radio />} label="High" />
              </RadioGroup>
            </FormControl>
        
            <TextField 
              fullWidth
              margin="normal"
              label="Start Date" 
              type="date" 
              variant="outlined" 
              InputLabelProps={{ shrink: true }}
              value={taskStartDate}
              onChange={handleStartDate} 
            />
        
            <TextField 
              fullWidth
              margin="normal"
              label="End Date" 
              type="date" 
              variant="outlined" 
              InputLabelProps={{ shrink: true }}
              value={taskEndDate}
              onChange={handleEndDate} 
            />
        
            <TextField 
              fullWidth
              margin="normal"
              label="Category" 
              variant="outlined"
              value={taskCategory}
              onChange={handleCategory} 
            />
        
            <Button 
              fullWidth
              variant="contained" 
              color="primary" 
              style={{ marginTop: '1em' }} 
              onClick={() => handleEditSubmit(taskID)}
            >
              Save Task
            </Button>
          </DialogContent>
        </Dialog>
    );
  }
  */
